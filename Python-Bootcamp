print("Hello, World!")

#This is a comment.
print("Hello, World!")
----------------------------------------------------------------------------------


Casting
If you want to specify the data type of a variable, this can be done with casting.

x = str(3)    # x will be '3'
y = int(3)    # y will be 3
z = float(3)  # z will be 3.0
----------------------------------------------------------------------------------

Get the Type
You can get the data type of a variable with the type() function.

x = 5
y = "John"
print(type(x))
print(type(y))


-------------------------------------------------------------------------------------
Variable Names*

Legal variable names:

myvar = "John"
my_var = "John"
_my_var = "John"
myVar = "John"
MYVAR = "John"
myvar2 = "John"
-------------------------------------------------------------------------------------

Illegal variable names:

2myvar = "John"
my-var = "John"
my var = "John"

-------------------------------------------------------------------------------------

Multi Words Variable Names
Variable names with more than one word can be difficult to read.

There are several techniques you can use to make them more readable:

Camel Case
Each word, except the first, starts with a capital letter:
myVariableName = "John"

Pascal Case
Each word starts with a capital letter:
MyVariableName = "John"

Snake Case
Each word is separated by an underscore character:
my_variable_name = "John"
-------------------------------------------------------------------------------------

Many Values to Multiple Variables
Python allows you to assign values to multiple variables in one line:

Example
x, y, z = "Orange", "Banana", "Cherry"
print(x)
print(y)
print(z)
-------------------------------------------------------------------------------------

Unpack a Collection
If you have a collection of values in a list, tuple etc. Python allows you to extract the values into variables. This is called unpacking.
Unpack a list:

fruits = ["apple", "banana", "cherry"]
x, y, z = fruits
print(x)
print(y)
print(z)
--------------------------------------------------------------------------------------

In the print() function, you output multiple variables, separated by a comma:
Example
x = "Python"
y = "is"
z = "awesome"
print(x, y, z)

You can also use the + operator to output multiple variables:
x = "Python "
y = "is "
z = "awesome"
print(x + y + z)

-------------------------------------------------------------------------------------
Global Variables
Variables that are created outside of a function (as in all of the examples above) are known as global variables.
Create a variable outside of a function, and use it inside the function

Global variables can be used by everyone, both inside of functions and outside.
x = "awesome"

def myfunc():
  print("Python is " + x)

myfunc()
-------------------------------------------------------------------------------------------
Create a variable inside a function, with the same name as the global variable

x = "awesome"

def myfunc():
  x = "fantastic"
  print("Python is " + x)

myfunc()

print("Python is " + x)         The Output will be Python is fantastic
                                Python is awesome

-----------------------------------------------------------------------------------------------

use the global keyword if you want to change a global variable inside a function.
To change the value of a global variable inside a function, refer to the variable by using the global keyword:

x = "awesome"

def myfunc():
  global x
  x = "fantastic"

myfunc()

print("Python is " + x)    The Output will be = Python is fantastic
